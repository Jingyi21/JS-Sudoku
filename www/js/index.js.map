{"version":3,"sources":["webpack:///webpack/bootstrap 3d662080bd2af97e0cd3","webpack:///./js/index.js","webpack:///./js/ui/grid.js","webpack:///./js/core/toolkit.js","webpack:///./js/core/sudoku.js","webpack:///./js/core/generator.js","webpack:///./js/core/checker.js","webpack:///./js/ui/popupnumbers.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC,C;;;;;;ACvBD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA0B,MAAM;AAChC,sCAAqC,UAAU;AAC/C,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,uC;AACA;;AAEA,UAAS;AACT,QAAO;AACP;AACA;AACA,Y;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;;;;;;ACjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,4BAA2B,YAAY;AACvC,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,wBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,WAAW;AAC1B;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;AC9EA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,E;;;;;;ACvBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,+BAA8B,G;;;;;;ACrE9B;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2BAA0B,cAAc;AACxC;AACA;;AAEA,+BAA8B,yBAAyB;AACvD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA0B,cAAc;AACxC;AACA,+BAA8B,cAAc;AAC5C;AACA;;AAEA;AACA,+BAA8B,yBAAyB;AACvD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA0B,aAAa;AACvC;AACA;AACA,gCAA+B,cAAc;AAC7C;AACA,4BAA2B;AAC3B;;AAEA,mE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kC;AACA,G;;;;;;AC/GA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,c;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,c;AACA;AACA;AACA;AACA;AACA,c;AACA;AACA;AACA;AACA,yC;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA,mC;AACA,gBAAe,UAAU;AACzB;AACA,sBAAqB,KAAK;AAC1B,qBAAoB,IAAI;AACxB,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,G","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3d662080bd2af97e0cd3","const Grid = require('./ui/grid')\r\nconst PopupNumbers = require('./ui/popupnumbers')\r\n\r\nconst grid = new Grid($('#container'))\r\ngrid.build()\r\ngrid.layout()\r\n\r\nconst popNumbers = new PopupNumbers($('popupNumbers'))\r\ngrid.bindPopup(PopupNumbers)\r\n\r\n$('#check').on('click', e => {\r\n    if (grid.check()) {\r\n        alert(\"成功\");\r\n    }\r\n})\r\n$('#reset').on('click', e => {\r\n    grid.reset();\r\n})\r\n$('#clear').on('click', e => {\r\n    grid.clear();\r\n})\r\n$('#rebuild').on('click', e => {\r\n    grid.rebuild();\r\n})\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/index.js\n// module id = 0\n// module chunks = 0","// 生成九宫格\r\nconst Toolkit = require('../core/toolkit');\r\n// const Generator = require(\"../core/generator\")\r\nconst Sudoku = require('../core/sudoku');\r\nconst Checker = require('../core/checker');\r\n\r\nclass Grid {\r\n  constructor (container) {\r\n    this._$container = container;\r\n  }\r\n  build() {\r\n    const sudoku = new Sudoku();\r\n    sudoku.make();\r\n    const matrix = sudoku.puzzleMatrix;\r\n    /* 测试用代码，直接完成游戏\r\n     * const matrix = sudoku.soultionMatrix;\r\n     */\r\n\r\n    // const generator = new Generator()\r\n    // generator.generate()\r\n    // const matrix = generator.matrix\r\n\r\n    const rowGroupClasses = ['row_g_top', 'row_g_middle', 'row_g_bottom'];\r\n    const colGroupClasses = ['col_g_top', 'col_g_center', 'col_g_right'];\r\n\r\n    const $cells = matrix.map(rowValues => rowValues\r\n      .map((cellValue, colIndex) => {\r\n        return $('<span>')\r\n          .addClass(colGroupClasses[colIndex % 3])\r\n          .addClass(cellValue ? 'fixed' : 'empty')\r\n          .text(cellValue)\r\n      })\r\n    )\r\n\r\n    const $divArray = $cells.map(($spanArray, rowIndex) => {\r\n      return $('<div>')\r\n        .addClass('row')\r\n        .addClass(rowGroupClasses[rowIndex % 3])\r\n        .append($spanArray)\r\n    })\r\n\r\n    this._$container.append($divArray)\r\n  }\r\n\r\n  layout() {\r\n    const width = $('span:first', this._$container).width()\r\n    $('span', this._$container)\r\n      .height(width)\r\n      .css({\r\n        'line-height': `${width}px`,\r\n        'font-size': width < 32 ? `${width / 2}px` : ''\r\n      })\r\n  }\r\n\r\n  // 检查用户解谜结果\r\n  check() {\r\n    const data = this._$container.children()\r\n      .map((rowIndex, div) => {\r\n        return $(div).children()\r\n          .map((colIndex, span) => $parseInt($(span).text()) || 0)\r\n      })\r\n      .toArray()\r\n      .map($data => $data.toArray());\r\n\r\n    const checker = new Checker(data);\r\n    if (checker.check()) {\r\n      return true;\r\n    }\r\n\r\n    const marks = checker.matrixMarks;\r\n    $this._$container.children()\r\n      .each((rowIndex, div) => {\r\n        $(div).children().each((colIndex, span) => {\r\n          const $span = $(span);\r\n          if ($span.is('fixed') || marks[rowIndex][colIndex]) {\r\n            $span.removeClass('error');\r\n          } else {\r\n            $(span).addClass('error');            \r\n          }\r\n\r\n        });\r\n      });\r\n  }\r\n  // 重置用户输入\r\n  reset() { \r\n    this._$container.find(\"span:not(.fixed)\")\r\n      .removeClass(\"error mark1 mark2\")\r\n      .addClass(\"empty\")\r\n      .text(0);\r\n   }\r\n  // 推倒重来\r\n  clear() {\r\n    this._$container.find(\"span.error\")\r\n      .removeClass(\"error\");\r\n  }\r\n  // 重新开始新的一局\r\n  rebuild() {\r\n    this._$container.empty();\r\n    this.build();\r\n    this.layout();\r\n  }\r\n\r\n  bindPopup(popupNumbers) {\r\n    this._$container.on('click', 'span', e => {\r\n      const $cell = $(e.target);\r\n      if ($cell.is(\".fixed\")) {\r\n        return;\r\n      }\r\n      popupNumbers.popup($cell);\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = Grid;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/ui/grid.js\n// module id = 1\n// module chunks = 0","/* \r\n * 矩阵和数组\r\n */\r\nconst matrixToolkit = {\r\n    makeRow (v = 0) {\r\n    const array = new Array(9)\r\n    array.fill(v)\r\n    return array\r\n    },\r\n\r\n    makeMatrix(v = 0) {\r\n        return Array.from({ length: 9 }, () => this.makeRow(v));\r\n    },\r\n/* \r\n * Fisher-Yates\r\n */\r\n    shuffle(array) {\r\n        const endIndex = array.length - 2;\r\n        for (let i = 0; i <= endIndex; i++) {\r\n            const j = i + Math.floor(Math.random() * (array.length - i));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return array;\r\n    },\r\n\r\n    // TODO 检查是否允许填入n\r\n    checkFillable(matrix, n, rowIndex, colIndex) {\r\n        const row = matrix[rowIndex];\r\n        const column = this.makeRow().map((v, i) => matrix[i][colIndex]);\r\n        const { boxIndex } = boxToolkit.convertToBoxIndex(rowIndex, colIndex);\r\n        const box = boxToolkit.getBoxCells(matrix, boxIndex);\r\n        for (let i = 0; i < 9; i++) {\r\n            if (row[i] === n || column[i] === n || box[i] === n) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n};\r\n\r\n/* 宫坐标系工具 */\r\nconst boxToolkit = {\r\n    getBoxCells(matrix, boxIndex) {\r\n        const startRowIndex = Math.floor(boxIndex / 3) * 3;\r\n        const startColIndex = boxIndex % 3 * 3;\r\n        const result = [];\r\n        for (let cellIndex = 0; cellIndex < 9; cellIndex++) {\r\n            const rowIndex = startRowIndex + Math.floor(cellIndex / 3);\r\n            const colIndex = startRowIndex + cellIndex % 3;\r\n            result.push(matrix[rowIndex][colIndex]);\r\n        }\r\n        return result;\r\n    },\r\n\r\n    convertToBoxIndex(rowIndex, colIndex) {\r\n        return {\r\n            boxIndex: Math.floor(rowIndex / 3) * 3 + Math.floor(colIndex / 3),\r\n            cellIndex: rowIndex % 3 * 3 + colIndex % 3\r\n        };\r\n    },\r\n\r\n    convertFromBoxIndex(boxIndex, cellIndex) {\r\n        return {\r\n            rowIndex: Math.floor(boxIndex / 3) * 3 + Math.floor(cellIndex / 3),\r\n            colIndex: boxIndex % 3 * 3 + cellIndex % 3\r\n        };\r\n    }\r\n};\r\n\r\nmodule.exports = class Toolkit {\r\n    // 矩阵和数据相关工具\r\n    static get matrix() {\r\n        return matrixToolkit;\r\n    }\r\n    // 宫坐标系相关工具\r\n    static get box() {\r\n        return boxToolkit;\r\n    }\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/toolkit.js\n// module id = 2\n// module chunks = 0","// 生成游戏\r\n\r\n// 1.生成完成的解決方案\r\n// 2.随机去除部分数据\r\n\r\nconst Generator  = require(\"./generator\");\r\n\r\nmodule.exports = class sudoku {\r\n\r\n    constructor() {\r\n        // 完整的解决方案\r\n        const generator = new Generator();\r\n        generator.generate();\r\n        this.solutionMatrix = generator.matrix;\r\n    }\r\n\r\n    make(level = 5) {\r\n        // const shouldRid = Math.random() * 9 < level;\r\n        // 生成谜盘\r\n        this.puzzleMatrix = this.solutionMatrix.map(row => {\r\n            return row.map(cell => Math.random() * 9 < level ? 0 : cell);\r\n        });\r\n    }\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/sudoku.js\n// module id = 3\n// module chunks = 0","// 生成数独解决方案\r\nconst Toolkit = require('./toolkit');\r\n\r\nmodule.exports = class Generator {\r\n  generate(){\r\n      while (!this.interenalGenerate()) {\r\n        // TODO\r\n      }\r\n  }\r\n\r\n  interenalGenerate() {\r\n    this.matrix = Toolkit.matrix.makeMatrix();\r\n    this.orders = Toolkit.matrix.makeMatrix()\r\n        .map(row => row.map((v, i) => i))\r\n        .map(row => Toolkit.matrix.shuffle(row));\r\n\r\n    for (let n = 1; n <= 9; n++) {\r\n      if (!this.fillNumber(n)){\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  /* Node 8.0.0 以上系统使用了npm 5.0，会引发内存溢出错误 \r\n   * 解决方法：\r\n   * 1.使用node 8以下的版本\r\n   * 2.单独将npm降级到3.xx版本\r\n   * 3.使用尾递归 // TODO\r\n   */\r\n  fillNumber(n) {\r\n    return this.fillNumber(n, 0);\r\n  }\r\n\r\n  fillRow(n, rowIndex) {\r\n    if (rowIndex > 8) {\r\n      return true;\r\n    }\r\n\r\n    const row = this.matrix[rowIndex];\r\n    const order = this.orders[rowIndex];\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n      const colIndex = orders[i];\r\n      // 若有值，则跳过\r\n      if (row[colIndex]) {\r\n        continue;\r\n      }\r\n\r\n      // 检查是否允许填入n值\r\n      if (!Toolkit.matrix.checkFillable(this.matrix, n, rowIndex, colIndex)) {\r\n        continue;\r\n      }\r\n\r\n      row[colIndex] = n;\r\n      // 当前行填写n成功则递归调用\r\n      if (!this.fillRow(n, rowIndex + 1)) {\r\n          row[colIndex] = 0;\r\n          continue;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\n/* const generator = new Generator();\r\ngenerator.generate();\r\nconsole.log(generator.matrix); */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/generator.js\n// module id = 4\n// module chunks = 0","// 检查数据解决方案\r\n\r\nfunction checkArray(array) {\r\n    const length = array.length;\r\n    const marks = new Array(length);\r\n    marks.fill(true);\r\n    // 修复无法检查最后一个数组为0的情况\r\n    for (let i = 0; i < length; i++) {\r\n        if (!marks[i]){\r\n            continue;\r\n        }\r\n        const v = array[i];\r\n        // 是否有效\r\n        if (!v) {\r\n            marks[i] = false;\r\n            continue;\r\n        }\r\n        // 是否有重复\r\n        for (let j = i + 1;j < length-1;j++) {\r\n            if (v === array[j]) {\r\n                marks[i] = marks[j] = false;\r\n            }\r\n        }\r\n    }\r\n    return marks;\r\n}\r\n\r\nconst Toolkit = require(\"./toolkit\");\r\n\r\n/*  输入：matrix、用户完成的数独数据，9×9\r\n *  处理：对matrix的行、列、宫进行检查，并填写marks\r\n *  输出：检查是否成功、marks\r\n */\r\nmodule.exports =  class Checker {\r\n    constructor(matrix) {\r\n        this._matrix = matrix;\r\n        this._matrixMarks = Toolkit.matrix.makeMatrix(true);\r\n    }\r\n\r\n    get matrixMarks() {\r\n        return this._matrixMarks;\r\n    }\r\n\r\n    get isSuccess() {\r\n        return this._success;\r\n    }\r\n\r\n    check() {\r\n        this.checkRows();\r\n        this.checkCols();\r\n        this.checkBoxes();\r\n\r\n        // 检查是否成功\r\n        this._success = this._matrixMarks.every(row => row.every(mark => mark));\r\n        return this._success;\r\n    }\r\n\r\n    checkRows() {\r\n        for (rowIndex = 0; rowIndex < 9;rowIndex++) {\r\n            const row = this._matrix[rowIndex];\r\n            const marks = checkArray(row);\r\n\r\n            for (colIndex = 0; colIndex < marks.length; colIndex++) {\r\n                if (!marks[colIndex]) {\r\n                    this._matrixMarks[rowIndex][colIndex] = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkCols() {\r\n        for (colIndex = 0; colIndex < 9;colIndex++) {\r\n            const cols = [];\r\n            for (rowIndex = 0; colIndex < 9; colIndex++) {\r\n                cols[rowIndex] = this._matrix[rowIndex][colIndex];\r\n            }\r\n\r\n            const marks = checkArray(cols);\r\n            for (rowIndex = 0; rowIndex < marks.length; rowIndex++) {\r\n                if (!marks[rowIndex]) {\r\n                    this._matrixMarks[rowIndex][colIndex] = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkBoxes() {\r\n        for (boxIndex = 0;boxIndex < 9;boxIndex++) {\r\n            const boxes = Toolkit.box.getBoxCells(this._matrix,boxIndex);\r\n            const marks = checkArray(boxes);\r\n            for (cellIndex = 0;cellIndex < 9;cellIndex++) {\r\n                if (!marks[cellIndex]) {\r\n                    const {rowIndex,colIndex}\r\n                         = Toolkit.box.convertFromBoxIndex(boxIndex, cellIndex);\r\n\r\n                    this._matrixMarks[rowIndex][colIndex] = false;                    \r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/* 测试用 */\r\n/* \r\nconst Generator = require(\"./generator\");\r\nconst gen = new Generator();\r\ngen.generate();\r\nconst matrix = gen.matrix;\r\n\r\nconst checker = new Checker(matrix);\r\nconsole.log(\"check result\",checker.check());\r\nconsole.log(checker.matrixMarks); \r\n*/\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/checker.js\n// module id = 5\n// module chunks = 0","// 处理弹出操作面板\r\n\r\nmodule.exports = class popupNumbers{\r\n    constructor($panel) {\r\n        this._$panel = $panel.hide().removeClass(\"hidden\");\r\n\r\n        this._$panel.on(\"click\", \"span\", e =>{\r\n            const $cell = this._$targetCell;\r\n            const $span = $(e.target);\r\n            \r\n            if ($span.hasClass(\"mark1\")) {\r\n                if ($cell.hasClass(\"mark1\")) {\r\n                    $cell.removeClass(\"mark1\");\r\n                } else {\r\n                    $cell.removeClass(\"mark2\")\r\n                        .addClass(\"mark1\");\r\n                }\r\n                // 回填样式\r\n            } \r\n            else if ($span.hasClass(\"mark2\")) {\r\n                if ($span.hasClass(\"mark2\")) {\r\n                    if ($cell.hasClass(\"mark2\")) {\r\n                        $cell.removeClass(\"mark2\");\r\n                    } else {\r\n                        $cell.removeClass(\"mark1\")\r\n                            .addClass(\"mark2\");\r\n                    }\r\n                // 回填样式\r\n                }\r\n            } \r\n            else if ($span.hasClass(\"empty\")) {\r\n                // 取消数字和mark\r\n                $cell.text(0)\r\n                    .addClass(\"empty\");\r\n            } \r\n            else {\r\n                // 回填数字1~9\r\n                $cell.removeClass(\"empty\")\r\n                    .text($span.text());                \r\n            }\r\n            this.hide();\r\n        });\r\n    }\r\n\r\n    popup($cell) {\r\n        this._$targetCell = $cell; \r\n        const {left, top} = $cell.position();\r\n        this._$panel.css({\r\n            left: `${left}px`,\r\n            top: `${top}px`\r\n        })\r\n        .show();\r\n    }\r\n\r\n    hide() {\r\n        this._$panel.hide();\r\n    }\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/ui/popupnumbers.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}